{"ast":null,"code":"var _jsxFileName = \"D:\\\\data\\\\Videos\\\\Video\\\\Python\\\\Weather\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"8814a34486850b05a6fc1dafa89c8b3a\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [city, setcity] = useState(\"Jamtara\");\n  const [weath, setweather] = useState({\n    coord: {\n      lon: 86.8,\n      lat: 23.95\n    },\n    weather: [{\n      id: 721,\n      main: \"Haze\",\n      description: \"haze\",\n      icon: \"50d\"\n    }],\n    base: \"stations\",\n    main: {\n      temp: \"Temperature\",\n      feels_like: 23.33,\n      temp_min: 25,\n      temp_max: 25,\n      pressure: 1017,\n      humidity: 50\n    },\n    visibility: 4000,\n    wind: {\n      speed: 4.12,\n      deg: 20\n    },\n    clouds: {\n      all: 0\n    },\n    dt: 1612587920,\n    sys: {\n      type: 1,\n      id: 9144,\n      country: \"IN\",\n      sunrise: 1612572698,\n      sunset: 1612612928\n    },\n    timezone: 19800,\n    id: 1269298,\n    name: \"Place\",\n    cod: 200\n  });\n  const [list, setlist] = useState([]);\n  const [data, setData] = useState({\n    place: \"\",\n    temperature: \"\",\n    about: \"\"\n  });\n\n  const refreshList = () => {\n    axios.get(\"api/Weatherapps/\").then(res => setlist(res.data)).catch(err => console.log(err));\n  };\n\n  const handleDelete = item => {\n    console.log(item.target.value);\n    axios.delete(`/api/Weatherapps/${item.target.value}/`).then(() => refreshList());\n  };\n\n  const handleUpdate = res => {\n    data.place = res.name;\n    data.temperature = res.main.temp;\n    data.about = res.weather[0].main;\n    setData({ ...data\n    });\n    axios.post(\"/api/Weatherapps/\", data).then(() => refreshList());\n  };\n\n  const search = e => {\n    if (e.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${city}&units=metric&appid=${api.key}`).then(res => res.json()).then(result => {\n        if (result.cod !== \"404\") {\n          setweather(result);\n          refreshList();\n          handleUpdate(result);\n          console.log(data);\n        }\n\n        setcity(\"\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City Name...\",\n        value: city,\n        onChange: e => setcity(e.target.value),\n        className: \"place\",\n        onKeyPress: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location\",\n          children: [weath.name, \",\", weath.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp\",\n          children: [\" \", weath.main.temp, \"\\u0970C \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather\",\n          children: weath.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about-place\",\n        children: list.map(map => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aboutlist\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"about-btn\",\n            value: map.id,\n            onClick: handleDelete,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"abouth\",\n            children: map.place\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"about-about\",\n            children: map.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"about-temp\",\n            children: map.temperature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, map.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/pXALfBe+1rqDDXUEZLyUUlmYsE=\");\n\n_c = App;\nexport default App; // 4bd34a0c791dbd6dc7181987589830b9\n// api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/data/Videos/Video/Python/Weather/frontend/src/App.js"],"names":["React","useState","axios","api","key","base","App","city","setcity","weath","setweather","coord","lon","lat","weather","id","main","description","icon","temp","feels_like","temp_min","temp_max","pressure","humidity","visibility","wind","speed","deg","clouds","all","dt","sys","type","country","sunrise","sunset","timezone","name","cod","list","setlist","data","setData","place","temperature","about","refreshList","get","then","res","catch","err","console","log","handleDelete","item","target","value","delete","handleUpdate","post","search","e","fetch","json","result","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst api = {\n  key: \"8814a34486850b05a6fc1dafa89c8b3a\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [city, setcity] = useState(\"Jamtara\");\n  const [weath, setweather] = useState({\n    coord: {\n      lon: 86.8,\n      lat: 23.95,\n    },\n    weather: [\n      {\n        id: 721,\n        main: \"Haze\",\n        description: \"haze\",\n        icon: \"50d\",\n      },\n    ],\n    base: \"stations\",\n    main: {\n      temp: \"Temperature\",\n      feels_like: 23.33,\n      temp_min: 25,\n      temp_max: 25,\n      pressure: 1017,\n      humidity: 50,\n    },\n    visibility: 4000,\n    wind: {\n      speed: 4.12,\n      deg: 20,\n    },\n    clouds: {\n      all: 0,\n    },\n    dt: 1612587920,\n    sys: {\n      type: 1,\n      id: 9144,\n      country: \"IN\",\n      sunrise: 1612572698,\n      sunset: 1612612928,\n    },\n    timezone: 19800,\n    id: 1269298,\n    name: \"Place\",\n    cod: 200,\n  });\n\n  const [list, setlist] = useState([]);\n  const [data, setData] = useState({\n    place: \"\",\n    temperature: \"\",\n    about: \"\",\n  });\n  const refreshList = () => {\n    axios\n      .get(\"api/Weatherapps/\")\n      .then((res) => setlist(res.data))\n      .catch((err) => console.log(err));\n  };\n  const handleDelete = (item) => {\n    console.log(item.target.value);\n    axios\n      .delete(`/api/Weatherapps/${item.target.value}/`)\n      .then(() => refreshList());\n  };\n\n  const handleUpdate = (res) => {\n    data.place = res.name;\n    data.temperature = res.main.temp;\n    data.about = res.weather[0].main;\n    setData({ ...data });\n    axios.post(\"/api/Weatherapps/\", data).then(() => refreshList());\n  };\n  const search = (e) => {\n    if (e.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${city}&units=metric&appid=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.cod !== \"404\") {\n            setweather(result);\n            refreshList();\n            handleUpdate(result);\n            console.log(data);\n          }\n          setcity(\"\");\n        });\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <main>\n        <input\n          type=\"text\"\n          placeholder=\"City Name...\"\n          value={city}\n          onChange={(e) => setcity(e.target.value)}\n          className=\"place\"\n          onKeyPress={search}\n        ></input>\n\n        <div className=\"location-box\">\n          <div className=\"location\">\n            {weath.name},{weath.sys.country}\n          </div>\n          {/* <div className=\"date-time\">Saturday 11 January 2021</div> */}\n        </div>\n\n        <div className=\"weather-box\">\n          <div className=\"temp\"> {weath.main.temp}॰C </div>\n          <div className=\"weather\">{weath.weather[0].description}</div>\n        </div>\n        <div className=\"about-place\">\n          {list.map((map) => (\n            <div className=\"aboutlist\" key={map.id}>\n              <button\n                className=\"about-btn\"\n                value={map.id}\n                onClick={handleDelete}\n              >\n                X\n              </button>\n              <h3 className=\"abouth\">{map.place}</h3>\n              <span className=\"about-about\">{map.about}</span>\n              <span className=\"about-temp\">{map.temperature}</span>\n            </div>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n// 4bd34a0c791dbd6dc7181987589830b9\n\n// api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\n"]},"metadata":{},"sourceType":"module"}